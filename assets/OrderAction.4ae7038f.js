var q=Object.defineProperty,H=Object.defineProperties;var U=Object.getOwnPropertyDescriptors;var N=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var $=(o,s,t)=>s in o?q(o,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[s]=t,b=(o,s)=>{for(var t in s||(s={}))j.call(s,t)&&$(o,t,s[t]);if(N)for(var t of N(s))z.call(s,t)&&$(o,t,s[t]);return o},y=(o,s)=>H(o,U(s));import{A as x,B as S,bs as J,aQ as T,b1 as A,aR as L,d as C,J as B,r as h,K as M,L as Q,i as k,j as w,O as g,P as v,m as e,Q as D,bt as K,T as R,H as G,k as c,aU as W,q as X,aa as Y,l as u,w as m,aJ as Z,f as ee,aE as ae,aN as se,bu as te,ay as le,ab as oe,ac as ne}from"./index.e442f220.js";import{c as V}from"./castArray.602f2c4f.js";const P=Symbol("collapseContextKey"),I=o=>typeof L(o),ie=x({accordion:Boolean,modelValue:{type:S([Array,String,Number]),default:()=>J([])}}),ce={[T]:I,[A]:I},re={name:"ElCollapse"},de=C(y(b({},re),{props:ie,emits:ce,setup(o,{expose:s,emit:t}){const i=o,a=B("collapse"),l=h(V(i.modelValue)),d=n=>{l.value=n;const r=i.accordion?l.value[0]:l.value;t(T,r),t(A,r)},p=n=>{if(i.accordion)d([(l.value[0]||l.value[0]===0)&&l.value[0]===n?"":n]);else{const r=[...l.value],_=r.indexOf(n);_>-1?r.splice(_,1):r.push(n),d(r)}};return M(()=>i.modelValue,()=>l.value=V(i.modelValue),{deep:!0}),Q(P,{activeNames:l,handleItemClick:p}),s({activeNames:l,setActiveNames:d}),(n,r)=>(k(),w("div",{class:v(e(a).b()),role:"tablist","aria-multiselectable":"true"},[g(n.$slots,"default")],2))}}));var ue=D(de,[["__file","/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse.vue"]]);const pe=x({title:{type:String,default:""},name:{type:S([String,Number]),default:()=>K()},disabled:Boolean}),me=["aria-expanded","aria-controls","aria-describedby"],ve=["id","tabindex","onKeypress"],fe=["id","aria-hidden","aria-labelledby"],he={name:"ElCollapseItem"},_e=C(y(b({},he),{props:pe,setup(o,{expose:s}){const t=o,i=R(P),a=B("collapse"),l=h(!1),d=h(!1),p=h(K()),n=G(()=>i==null?void 0:i.activeNames.value.includes(t.name)),r=()=>{setTimeout(()=>{d.value?d.value=!1:l.value=!0},50)},_=()=>{t.disabled||(i==null||i.handleItemClick(t.name),l.value=!1,d.value=!0)},O=()=>{i==null||i.handleItemClick(t.name)};return s({isActive:n}),(f,E)=>(k(),w("div",{class:v([e(a).b("item"),e(a).is("active",e(n)),e(a).is("disabled",f.disabled)])},[c("div",{role:"tab","aria-expanded":e(n),"aria-controls":e(a).b(`content-${p.value}`),"aria-describedby":e(a).b(`content-${p.value}`)},[c("div",{id:e(a).b(`head-${p.value}`),class:v([e(a).be("item","header"),e(a).is("active",e(n)),{focusing:l.value}]),role:"button",tabindex:f.disabled?-1:0,onClick:_,onKeypress:W(le(O,["stop","prevent"]),["space","enter"]),onFocus:r,onBlur:E[0]||(E[0]=Se=>l.value=!1)},[g(f.$slots,"title",{},()=>[X(Y(f.title),1)]),u(e(ee),{class:v([e(a).be("item","arrow"),e(a).is("active",e(n))])},{default:m(()=>[u(e(Z))]),_:1},8,["class"])],42,ve)],8,me),u(e(te),null,{default:m(()=>[ae(c("div",{id:e(a).b(`content-${p.value}`),class:v(e(a).be("item","wrap")),role:"tabpanel","aria-hidden":!e(n),"aria-labelledby":e(a).b(`head-${p.value}`)},[c("div",{class:v(e(a).be("item","content"))},[g(f.$slots,"default")],2)],10,fe),[[se,e(n)]])]),_:3})],2))}}));var F=D(_e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse-item.vue"]]);const be=oe(ue,{CollapseItem:F}),ye=ne(F);const ge={class:"demo-collapse"},Ce=c("div",null," Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to; ",-1),ke=c("div",null," Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc. ",-1),we=c("div",null," Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects; ",-1),Ee=c("div",null," Visual feedback: reflect current state by updating or rearranging elements of the page. ",-1),Ne=c("div",null," Simplify the process: keep operating process simple and intuitive; ",-1),$e=c("div",null," Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions; ",-1),Ve=c("div",null," Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling. ",-1),Ie=c("div",null," Decision making: giving advices about operations is acceptable, but do not make decisions for the users; ",-1),xe=c("div",null," Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation. ",-1),De=C({setup(o){const s=h("1");return(t,i)=>{const a=ye,l=be;return k(),w("div",ge,[u(l,{modelValue:s.value,"onUpdate:modelValue":i[0]||(i[0]=d=>s.value=d),accordion:""},{default:m(()=>[u(a,{title:"Consistency",name:"1"},{default:m(()=>[Ce,ke]),_:1}),u(a,{title:"Feedback",name:"2"},{default:m(()=>[we,Ee]),_:1}),u(a,{title:"Efficiency",name:"3"},{default:m(()=>[Ne,$e,Ve]),_:1}),u(a,{title:"Controllability",name:"4"},{default:m(()=>[Ie,xe]),_:1})]),_:1},8,["modelValue"])])}}});export{De as default};
